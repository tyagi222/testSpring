##### data source
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

##### ddl
# spring.jpa.hibernate.ddl-auto
# create / create-drop => untuk generate ulang database nya
# (gunakan jika ingin refresh db ke kondisi awal)
# update => untuk update tabel pada database tanpa menghapus data atau kolom yg sudah ada
# (gunakan jika mau update tabel2 yang ada tanpa kehilangan data)
# validate / none => tidak menggenerate database, hanya menggunakan database yang sudah ada pada db server
# (gunakan ketika deployment/live)
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.hbm2ddl.create_namespaces=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.defer-datasource-initialization=true

##### initialize sql
# spring.sql.init.mode
# always => untuk mengaktifkan auto generate initial data yang ada pada data.sql
# (gunakan ketika ingin populate seeder data)
# never => untuk menonaktifkan auto generate initial data
# (gunakan jika tidak ingin populate seeder data (ulang) atau jika deployment / live)
spring.sql.init.mode=always
# spring.sql.init.data-locations
# classpath:*_data_*.sql => untuk run semua seeder production yang ada pada folder resources
# classpath:*_data_*.sql* => untuk run semua seeder production dan dev yang ada pada folder resources
# spring.sql.init.data-locations=classpath:*_data_*.sql
spring.sql.init.data-locations=classpath:*_data_*.sql*